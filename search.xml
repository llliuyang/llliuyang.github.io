<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文件系统函数</title>
      <link href="/php-xue-xi/wen-jian-xi-tong-han-shu/"/>
      <url>/php-xue-xi/wen-jian-xi-tong-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="filesystem函数学习笔记"><a href="#filesystem函数学习笔记" class="headerlink" title="filesystem函数学习笔记"></a>filesystem函数学习笔记</h1><blockquote><p>filesystem函数允许用户访问和操作文件系统</p></blockquote><h2 id="1、复制文件-copy"><a href="#1、复制文件-copy" class="headerlink" title="1、复制文件 - copy()"></a>1、复制文件 - copy()</h2><blockquote><p><code>copy()</code> 函数复制文件。<br>该函数如果成功则返回 TRUE，如果失败则返回 FALSE。<br>若文件存在，则覆盖</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>copy(file,to_file)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>: 要复制的文件</li><li><code>to_file</code>: 复制文件的目的地</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">'filesys.txt'</span><span class="token punctuation">;</span>  <span class="token function">copy</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">'./filesysdir/copyfile.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、返回文件名-basename"><a href="#2、返回文件名-basename" class="headerlink" title="2、返回文件名 - basename()"></a>2、返回文件名 - basename()</h2><blockquote><p><code>basename()</code> 返回路径中的文件名部分。<br>若规定了扩展名，当文件有匹配的扩展名，则不显示扩展名</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>basename(path[,suffix])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>: 文件路径</li><li><code>suffix</code>: 文件扩展名</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string">'dir/filesys.txt'</span><span class="token punctuation">;</span>  <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出 filesys.txt</span>  <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'.txt'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//输出 filesys</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、返回文件夹部分-dirname"><a href="#3、返回文件夹部分-dirname" class="headerlink" title="3、返回文件夹部分 - dirname()"></a>3、返回文件夹部分 - dirname()</h2><blockquote><p><code>dirname()</code> 返回文件路径的文件夹部分。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>dirname(path)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>: 文件路径</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string">'dir/filesys.txt'</span><span class="token punctuation">;</span>  <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出 dir</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、创建目录-mkdir"><a href="#4、创建目录-mkdir" class="headerlink" title="4、创建目录 - mkdir()"></a>4、创建目录 - mkdir()</h2><blockquote><p><code>mkdir()</code> 创建目录，成功返回true，否则false。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>mkdir(path,mode,recursive,context)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>: 要创建目录的名称</li><li><code>mode</code>: 规定权限。默认是 0777（允许全局访问）</li><li><code>recursive</code>: 规定是否设置递归模式。（PHP 5 中新增的）</li><li><code>context</code>: 规定文件句柄的环境。context 是一套可以修改流的行为的选项。（PHP 5 中新增的）</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 只创建一次，先检查，如果有，则忽略，没有，则创建</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./newDir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./newDir'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>       <span class="token keyword">echo</span> <span class="token string">'目录已存在!'</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、移动文件-move-uploaded-file"><a href="#5、移动文件-move-uploaded-file" class="headerlink" title="5、移动文件 - move_uploaded_file()"></a>5、移动文件 - move_uploaded_file()</h2><blockquote><p><code>move_uploaded_file()</code>移动文件到新目录。若存在，则覆盖。<br>如果成功该函数返回 TRUE，如果失败则返回 FALSE。<br><strong>注意</strong>：该函数仅用于通过 <code>HTTP POST</code> 上传的文件。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>move_uploaded_file(file,newloc)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>: 要转移的文件</li><li><code>newloc</code>: 文件转移的目的地</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">//检查是否是通过HTTP POST上传的文件</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//判断文件是否存在</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./newDir/filesys.txt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'./newDir/filesys.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">echo</span> <span class="token string">"文件转移成功"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>       <span class="token keyword">echo</span> <span class="token string">"文件已转移,并且存在"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>       <span class="token keyword">echo</span> <span class="token string">'文件不是通过HTTP POST 方法上传的，无法使用此方法转移！'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、获取文件信息-权限-类型-大小-绝对路径"><a href="#6、获取文件信息-权限-类型-大小-绝对路径" class="headerlink" title="6、获取文件信息 - 权限_类型_大小_绝对路径"></a>6、获取文件信息 - 权限_类型_大小_绝对路径</h2><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">echo</span> <span class="token string">'文件权限：'</span><span class="token punctuation">.</span> <span class="token function">fileperms</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'文件类型：'</span><span class="token punctuation">.</span> <span class="token function">filetype</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'文件大小：'</span><span class="token punctuation">.</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token punctuation">.</span> <span class="token string">'kb&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'绝对路径：'</span><span class="token punctuation">.</span> <span class="token function">realpath</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、获取路径信息-pathinfo"><a href="#7、获取路径信息-pathinfo" class="headerlink" title="7、获取路径信息 - pathinfo()"></a>7、获取路径信息 - pathinfo()</h2><blockquote><p><code>pathinfo()</code> 函数以数组的形式返回关于文件路径的信息。</p></blockquote><p>返回的数组元素如下：</p><ul><li><code>dirname</code>: 目录路径</li><li><code>basename</code>: 文件名</li><li><code>extension</code>: 文件后缀名</li><li><code>filename</code>: 不包含后缀的文件名</li></ul><p><strong>语法</strong></p><blockquote><p><code>pathinfo(path[,options])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>: 规定要检查的路径。</li><li><code>options</code>: 规定要返回的数组元素。默认是 all。</li></ul><p><strong>options可能的值</strong><br>1.<code>PATHINFO_DIRNAME</code> - 只返回 dirname<br>2.<code>PATHINFO_BASENAME</code> - 只返回 basename<br>3.<code>PATHINFO_EXTENSION</code> - 只返回 extension<br>4.<code>PATHINFO_FILENAME</code> - 只返回 filename</p><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token string">"/dir/filesys.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上输出：</p><pre><code>Array(    [dirname] =&gt; /dir    [basename] =&gt; filesys.txt    [extension] =&gt; txt    [filename] =&gt; filesys)</code></pre><p><strong>带参数实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token string">"/dir/filesys.txt"</span>，<span class="token constant">PATHINFO_BASENAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出 filesys.txt</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8、文件操作的时间戳"><a href="#8、文件操作的时间戳" class="headerlink" title="8、文件操作的时间戳"></a>8、文件操作的时间戳</h2><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">echo</span> <span class="token string">"文件上次访问时间: "</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">"Y-m-d H:i:s"</span><span class="token punctuation">,</span><span class="token function">fileatime</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"文件上次修改时间: "</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">"Y-m-d H:i:s"</span><span class="token punctuation">,</span><span class="token function">filectime</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"文件内容上次修改时间: "</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">"Y-m-d H:i:s"</span><span class="token punctuation">,</span><span class="token function">filemtime</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>以上函数都是返回时间戳，并且执行结果会被缓存</p></blockquote><h2 id="9、获取指定磁盘总容量-disk-total-space"><a href="#9、获取指定磁盘总容量-disk-total-space" class="headerlink" title="9、获取指定磁盘总容量 - disk_total_space()"></a>9、获取指定磁盘总容量 - disk_total_space()</h2><blockquote><p><code>disk_total_space()</code> 函数返回指定目录的磁盘总容量，以字节为单位。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>disk_total_space(directory)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>directory</code>：规定要检查的目录。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token comment" spellcheck="true">//获取C盘的总容量 单位为G</span><span class="token keyword">echo</span> <span class="token function">disk_total_space</span><span class="token punctuation">(</span><span class="token string">"C:"</span><span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'G'</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10、获取指定磁盘可用容量-disk-free-space"><a href="#10、获取指定磁盘可用容量-disk-free-space" class="headerlink" title="10、获取指定磁盘可用容量 - disk_free_space()"></a>10、获取指定磁盘可用容量 - disk_free_space()</h2><blockquote><p><code>disk_free_space()</code> 函数返回指定目录的磁盘总容量，以字节为单位。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>disk_free_space(directory)</code><br>别名：<code>diskfreespace(directory)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>directory</code>：规定要检查的目录。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token comment" spellcheck="true">//获取C盘的可用容量 单位为G</span><span class="token keyword">echo</span> <span class="token function">disk_total_space</span><span class="token punctuation">(</span><span class="token string">"C:"</span><span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'G'</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11、向打开文件中写入内容-fwrite"><a href="#11、向打开文件中写入内容-fwrite" class="headerlink" title="11、向打开文件中写入内容 - fwrite()"></a>11、向打开文件中写入内容 - fwrite()</h2><blockquote><p><code>fwrite()</code> 函数将内容写入一个<code>打开的</code>文件中。<br>函数会在到达指定长度或读到文件末尾（EOF）时（以先到者为准），停止运行。<br>如果函数成功执行，则<em>返回写入的字节数</em>。如果失败，则返回 FALSE。<br><strong>对于相同内容，每次都重新覆盖，也可以理解为只执行了一次，但实际不是</strong></p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fwrite(file,string[,length])</code><br>别名：<code>fputs(file,string[,length])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：    必需。规定要写入的打开文件。</li><li><code>string</code>： 必需。规定要写入打开文件的字符串。</li><li><code>length</code>：     可选。规定要写入的最大字节数。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"打开文件失败！&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'写入的字节数为：'</span><span class="token punctuation">.</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">"\nthis is new line writein with fwrite"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意</strong>：内容是新增还是覆盖，取决于打开文件的模式。</p></blockquote><h2 id="12、返回读取的字符串-fread"><a href="#12、返回读取的字符串-fread" class="headerlink" title="12、返回读取的字符串 - fread()"></a>12、返回读取的字符串 - fread()</h2><blockquote><p><code>fread()</code> 函数读取打开的文件。<br>函数会在到达指定长度或读到文件末尾（EOF）时（以先到者为准），停止运行。<br>该函数返回读取的字符串，如果失败则返回 FALSE。<br><strong>简易理解</strong>：相当于截取操作并返回截取的字符串，再次操作就会在上次剩余的里面截取</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fread(file,length)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要读取的打开文件。</li><li><code>length</code>：必需。规定要读取的最大字节数。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"打开文件失败！&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 复习：使用filesize()函数获取文件大小（文件全部字节长度）</span><span class="token keyword">echo</span> <span class="token string">"读取文件全部内容："</span><span class="token punctuation">.</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// echo "读取文件20个字节：".fread($file,20);</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token comment" spellcheck="true">// 若是两个输出同时开启，那么下面的输出为0,因为上面的读取了所有字节，没有剩余</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13、将文件读入一个数组-file"><a href="#13、将文件读入一个数组-file" class="headerlink" title="13、将文件读入一个数组 - file()"></a>13、将文件读入一个数组 - file()</h2><blockquote><p><code>file()</code> 函数把整个文件读入一个数组中。<br>数组中的每个元素都是文件中相应的一行，包括换行符在内。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>file(path[,include_path][,context])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>：必需。 规定要读取的文件。</li><li><code>include_path</code>： 可选参数。可以是以下一个或多个常量。</li><li><code>context</code>： 可选。规定文件句柄的环境。</li></ul><p><strong>可选参数</strong><br>1.<code>FILE_USE_INCLUDE_PATH</code> - 在 include_path 中查找文件。<br>2.<code>FILE_IGNORE_NEW_LINES</code> - 在数组每个元素的末尾不要添加换行符。<br>3.<code>FILE_SKIP_EMPTY_LINES</code> - 跳过空行。</p><h2 id="14、裁剪文件-ftruncate"><a href="#14、裁剪文件-ftruncate" class="headerlink" title="14、裁剪文件 - ftruncate()"></a>14、裁剪文件 - ftruncate()</h2><blockquote><p><code>ftruncate()</code> 函数把打开的文件裁剪到指定的长度然后保存。<br>如果成功则返回 TRUE，如果失败则返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>ftruncate(file,size)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要截断的打开文件。</li><li><code>size</code>：必需。规定新的文件大小。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token string">'文件原始大小：'</span><span class="token punctuation">.</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ftruncate</span><span class="token punctuation">(</span><span class="token variable">$file16</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清除缓存</span><span class="token function">clearstatcache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'截取后的大小：'</span><span class="token punctuation">.</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="15、文件指针操作"><a href="#15、文件指针操作" class="headerlink" title="15、文件指针操作"></a>15、文件指针操作</h2><p><strong>综合实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ftell()返回当前指针位置</span><span class="token keyword">echo</span> <span class="token string">'初始指针位置：'</span><span class="token punctuation">.</span><span class="token function">ftell</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// fseek(file,offset) 移动指针</span><span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">"15"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">'移动后指针位置：'</span><span class="token punctuation">.</span><span class="token function">ftell</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// rewind(file) 倒回指针到文件开头</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">'倒回后指针位置：'</span><span class="token punctuation">.</span><span class="token function">ftell</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>以上操作返回</strong></p><pre class="line-numbers language-html"><code class="language-html">初始指针位置：0移动后指针位置：15倒回后指针位置：0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>###15.1、返回指针当前位置 - ftell()</p><blockquote><p><code>ftell()</code> 函数返回在打开文件中的当前位置。<br>返回文件指针的当前位置，如果失败则返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>ftell(file)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要检查的已打开文件。</li></ul><p>###15.2、指针移动 - fseek()</p><blockquote><p><code>fseek()</code> 函数在打开的文件中定位。<br>该函数把文件指针从当前位置向前或向后移动到新的位置，新位置从<strong>文件头开始以字节数度量</strong>。<br>如果成功该函数返回 0，如果失败则返回 -1。请注意，移动到文件末尾（EOF）之后的位置不会产生错误。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fseek(file,offset,whence)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要检查的已打开文件。</li><li><code>offset</code>：必需。规定新的位置（从文件头开始以字节数度量）。</li><li><code>whence</code>： 可选。（PHP 4 中新增的）。</li></ul><p><strong>whence可能的值</strong><br>1.<code>SEEK_SET</code> - 设定位置等于 offset。默认。<br>2.<code>SEEK_CUR</code> - 设定位置为当前位置加上 offset。<br>3.<code>SEEK_END</code> - 设定位置为文件末尾（EOF）加上 offset（要移动到文件末尾之前的位置，offset 必须是一个负值）。</p><p>###15.3、指针重置 - rewind()</p><blockquote><p><code>rewind()</code> 函数将文件指针的位置倒回文件的开头。<br>如果成功，该函数返回 TRUE。如果失败，则返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>rewind(file)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定已打开的文件。</li></ul><h2 id="16、重命名-rename"><a href="#16、重命名-rename" class="headerlink" title="16、重命名 - rename()"></a>16、重命名 - rename()</h2><blockquote><p><code>rename()</code> 函数重命名文件或目录。<br>如果成功，该函数返回 TRUE。如果失败，则返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>rename(oldname,newname[,context])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>oldname</code>：必需。规定要重命名的文件或目录。</li><li><code>newname</code>：必需。规定文件或目录的新名称。</li><li><code>context</code>：可选。规定文件句柄的环境。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$oldName</span> <span class="token operator">=</span> <span class="token string">'oldDir'</span><span class="token punctuation">;</span><span class="token variable">$newName</span> <span class="token operator">=</span> <span class="token string">'renameDir'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 先检查老文件名是否存在</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$oldName</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$renameRes</span> <span class="token operator">=</span> @<span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$oldName</span><span class="token punctuation">,</span><span class="token variable">$newName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//检查是否重命名成功</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$renameRes</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span>  <span class="token string">"重命名成功！"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 检查新名字是否存在</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$newName</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token keyword">echo</span> <span class="token variable">$newName</span><span class="token punctuation">.</span><span class="token string">"已存在，无法重复命名"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"重命名失败，请检查后再试"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>       <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$oldName</span><span class="token punctuation">.</span><span class="token string">'不存在&lt;br>'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="17、将文件读入字符串-file-get-contents"><a href="#17、将文件读入字符串-file-get-contents" class="headerlink" title="17、将文件读入字符串 - file_get_contents()"></a>17、将文件读入字符串 - file_get_contents()</h2><blockquote><p><code>file_get_contents()</code> 把整个文件读入一个字符串中。<br>该函数是用于把文件的内容读入到一个字符串中的<strong>首选方法</strong>。<br>如果服务器操作系统支持，还会使用内存映射技术来增强性能。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>file_get_contents(path[,include_path][,context][,start][,max_length])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>path</code>： 必需。规定要读取的文件，或者url。</li><li><code>include_path</code>： 可选。如果您还想在 include_path（在 php.ini 中）中搜索文件的话，请设置该参数为 ‘1’。</li><li><code>context</code>：可选。规定文件句柄的环境。</li><li><code>start</code>： 可选。规定在文件中开始读取的位置。 PHP 5.1 中新增。</li><li><code>max_length</code>： 可选。规定读取的字节数。 PHP 5.1 中新增。</li></ul><p><strong>实例</strong></p><p>假定<code>test.txt</code>中的内容为：<code>this is a test file</code></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出 this is a test file</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="✔-file-get-contents函数超时处理"><a href="#✔-file-get-contents函数超时处理" class="headerlink" title="✔ file_get_contents函数超时处理"></a>✔ file_get_contents函数超时处理</h2><blockquote><p>在使用<code>file_get_contents</code>函数读取文件或URL的时候，经常会出现超时的情况，我们可以通过一些方法来尽量的避免或者解决。</p></blockquote><h3 id="1、增加超时的时间限制"><a href="#1、增加超时的时间限制" class="headerlink" title="1、增加超时的时间限制"></a>1、增加超时的时间限制</h3><p>这里需要注意：<code>set_time_limit(0)</code>只是设置你的PHP程序的超时时间，而不是<code>file_get_contents</code>函数读取URL的超时时间。 </p><p>想通过<code>set_time_limit(0)</code>影响到<code>file_get_contents</code>来增加超时时间，经测试，是无效的。</p><p>真正的修改<code>file_get_contents</code>延时可以用<code>resource $context</code>的<code>timeout</code>参数，<code>timeout</code>参数的单位是<code>s</code>（秒）。 </p><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$opts</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>     <span class="token string">'http'</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">array</span><span class="token punctuation">(</span>         <span class="token string">'method'</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"GET"</span><span class="token punctuation">,</span>         <span class="token string">'timeout'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">30</span><span class="token punctuation">,</span>     <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.abc.com', false, stream_context_create($opts)); </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、超过几秒就重新执行，多次重试直到成功"><a href="#2、超过几秒就重新执行，多次重试直到成功" class="headerlink" title="2、超过几秒就重新执行，多次重试直到成功"></a>2、超过几秒就重新执行，多次重试直到成功</h3><p><code>file_get_contents</code>超时有时候失败是因为网络等因素造成，没有解决办法，但是可以修改程序，失败时重试几次，仍然失败就放弃，因为<code>file_get_contents()</code>如果失败将返回 FALSE，所以可以下面这样编写代码：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$cnt</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 重载三次，再失败就放弃</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$cnt</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$str</span><span class="token operator">=</span>@<span class="token function">file_get_contents</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.abc.com'))===FALSE) $cnt++;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：如果执行时间过长，还需要用函数<code>set_time_limit(0)</code>就不会超时了。</p></blockquote><h2 id="✔-file-get-contents函数代理设置处理"><a href="#✔-file-get-contents函数代理设置处理" class="headerlink" title="✔ file_get_contents函数代理设置处理"></a>✔ file_get_contents函数代理设置处理</h2><h3 id="设置代理IP去获取页面数据"><a href="#设置代理IP去获取页面数据" class="headerlink" title="设置代理IP去获取页面数据"></a>设置代理IP去获取页面数据</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$context</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>     <span class="token string">'http'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">(</span>       <span class="token comment" spellcheck="true">//这里设置你要使用的代理ip及端口号 </span>        <span class="token string">'proxy'</span> <span class="token operator">=</span><span class="token operator">></span> 'tcp<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//192.168.0.1:3128',  </span>        <span class="token string">'request_fulluri'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>"http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.abc.com", false, $context); </span><span class="token keyword">echo</span> <span class="token variable">$html</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置需要验证的代理IP去采集获取页面数据"><a href="#设置需要验证的代理IP去采集获取页面数据" class="headerlink" title="设置需要验证的代理IP去采集获取页面数据"></a>设置需要验证的代理IP去采集获取页面数据</h3><pre class="line-numbers language-php"><code class="language-php"> <span class="token comment" spellcheck="true">//LOGIN:PASSWORD 这里是代理服务器的账户名及密码 </span><span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token string">'USER:PASS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token variable">$context</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>     <span class="token string">'http'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">(</span>       <span class="token comment" spellcheck="true">//这里设置你要使用的代理ip及端口号 </span>        <span class="token string">'proxy'</span> <span class="token operator">=</span><span class="token operator">></span> 'tcp<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//192.168.0.1:3128',  </span>        <span class="token string">'request_fulluri'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">,</span>         <span class="token string">'header'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"Proxy-Authorization: Basic $auth"</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>"http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.abc.com", false, $context); </span><span class="token keyword">echo</span> <span class="token variable">$html</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="18、将字符串写入文件-file-put-contents"><a href="#18、将字符串写入文件-file-put-contents" class="headerlink" title="18、将字符串写入文件 - file_put_contents()"></a>18、将字符串写入文件 - file_put_contents()</h2><blockquote><p><code>file_put_contents()</code> 函数把一个字符串写入文件中。<br>执行一次，写入一次<br>如果成功，该函数将返回写入文件中的字符数。如果失败，则返回 False。</p></blockquote><p><strong>该函数访问文件时，遵循以下规则：</strong></p><ol><li>如果设置了 <code>FILE_USE_INCLUDE_PATH</code>，那么将检查 <code>filename</code> 副本的内置路径</li><li>如果文件不存在，将创建一个文件</li><li>打开文件</li><li>如果设置了 <code>LOCK_EX</code>，那么将锁定文件</li><li>如果设置了 <code>FILE_APPEND</code>，那么将移至文件末尾。否则，将会清除文件的内容</li><li>向文件中写入数据</li><li>关闭文件并对所有文件解锁</li></ol><p><strong>语法</strong></p><blockquote><p><code>file_put_contents(file,data[,mode][,context])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要写入数据的文件。如果文件不存在，则创建一个新文件。</li><li><code>data</code>：必需。规定要写入文件的数据。可以是字符串、数组或数据流。</li><li><code>mode</code>：可选。规定如何打开/写入文件。</li><li><code>context</code>：可选。规定文件句柄的环境。</li></ul><p><strong>mode可能的值：</strong><br>1.<code>FILE_USE_INCLUDE_PATH</code><br>2.<code>FILE_APPEND</code><br>3.<code>LOCK_EX</code></p><blockquote><p>注意：默认是请空文件内容，然后添加。如果是向其中追加内容，请添加 <code>FILE_APPEND</code> 标记，避免删除文件中已存在的内容</p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 1.请空原文件内容，添加，返回添加字符数</span><span class="token keyword">echo</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">'add a new line'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2.文末追加</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token string">"add a new line"</span><span class="token punctuation">,</span> <span class="token constant">FILE_APPEND</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19、fgets-、fgetc-和fgetss"><a href="#19、fgets-、fgetc-和fgetss" class="headerlink" title="19、fgets()、fgetc()和fgetss()"></a>19、fgets()、fgetc()和fgetss()</h2><p>假定<code>test.txt</code>中的内容如下：</p><pre class="line-numbers language-txt"><code class="language-txt">hello,this is the first linethe 2nd linethe 3rd line<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>假定<code>test.htm</code>中的内容如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>hello,this is the first line<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>the 2nd line<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>the 3rd line<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1、fgets-按行读取"><a href="#1、fgets-按行读取" class="headerlink" title="1、fgets() - 按行读取"></a>1、fgets() - 按行读取</h3><blockquote><p><code>fgets()</code> 函数从打开的文件中返回一行。<br><code>fgets()</code> 函数会在到达指定长度或读到文件末尾（EOF）时（以先到者为准），停止返回一个新行。<br>如果失败该函数返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fgets(file[,length])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要读取的文件。</li><li><code>length</code>：可选。规定要读取的字节数。默认是 1024 字节。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span>   <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">echo</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出如下：</p><pre class="line-numbers language-html"><code class="language-html">hello,this is the first line<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果想要输出整个文件：</p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span>   <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 判断是否到达了文件末尾</span>   <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">echo</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>   <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出如下：</p><pre class="line-numbers language-html"><code class="language-html">hello,this is the first linethe 2nd linethe 3rd line<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2、fgetc-按字符读取"><a href="#2、fgetc-按字符读取" class="headerlink" title="2、fgetc() -  按字符读取"></a>2、fgetc() -  按字符读取</h3><blockquote><p><code>fgetc()</code> 函数从打开的文件中返回一个单一的字符。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fgetc(file)</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要检查的文件。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token function">fgetc</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-html"><code class="language-html">h<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若需要读取整个文件，方法同<code>fgets()</code></p><blockquote><p>注意：该函数处理大文件非常缓慢，所以它不用于处理大文件。<br>如果您需要从一个大文件依次读取一个字符，请使用 <code>fgets()</code> 依次读取一行数据，然后使用 <code>fgetc()</code> 依次处理行数据。</p></blockquote><h3 id="3、fgetss-按行读取并过滤HTML和PHP标签"><a href="#3、fgetss-按行读取并过滤HTML和PHP标签" class="headerlink" title="3、fgetss() - 按行读取并过滤HTML和PHP标签"></a>3、fgetss() - 按行读取并过滤HTML和PHP标签</h3><blockquote><p><code>fgetss()</code> 函数从打开的文件中返回一行，并过滤掉 HTML 和 PHP 标签。<br><code>fgetss()</code> 函数会在到达指定长度或读到文件末尾（EOF）时（以先到者为准），停止返回一个新行。<br>如果失败该函数返回 FALSE。<br>不推荐使用。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>fgetss(file[,length][,tags])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>file</code>：必需。规定要检查的文件。</li><li><code>length</code>：可选。规定要读取的字节数。默认是 1024 字节。（php5之前为必需参数）</li><li><code>tags</code>：可选。指定不会被删除的标签。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"test.htm"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token function">fgetss</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出如下：</p><pre class="line-numbers language-html"><code class="language-html">hello,this is the first line<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若不想过滤某个（些）标签，可以添加第二参数：</p><pre class="line-numbers language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"test.htm"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token function">fgetss</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token string">"&lt;p>,&lt;i>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>hello,this is the first line<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="20、删除文件-unlink"><a href="#20、删除文件-unlink" class="headerlink" title="20、删除文件 - unlink()"></a>20、删除文件 - unlink()</h2><blockquote><p><code>unlink()</code> 函数删除文件。<br>如果成功，该函数返回 TRUE。如果失败，则返回 FALSE。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>unlink(filename[,context])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>filename</code>：必需。规定要删除的文件。</li><li><code>context</code>：可选。规定文件句柄的环境。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$unlink</span> <span class="token operator">=</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$unlink</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"文件删除成功"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"文件删除失败！"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="21、删除空文件夹-rmdir"><a href="#21、删除空文件夹-rmdir" class="headerlink" title="21、删除空文件夹 - rmdir()"></a>21、删除空文件夹 - rmdir()</h2><blockquote><p><code>rmdir()</code> 尝试删除 <code>dirname</code> 所指定的目录。 该目录必须是空的，而且要有相应的权限。</p></blockquote><p><strong>语法</strong></p><blockquote><p><code>rmdir(dir[,context])</code></p></blockquote><p><strong>参数说明</strong></p><ul><li><code>dir</code>：必需。规定要删除的目录。</li><li><code>context</code>：可选。规定文件句柄的环境。</li></ul><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$emptyDir</span> <span class="token operator">=</span> <span class="token string">'filesysdir'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token variable">$emptyDir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"空文件夹"</span><span class="token punctuation">.</span><span class="token variable">$emptyDir</span><span class="token punctuation">.</span><span class="token string">"已删除"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$emptyDir</span><span class="token punctuation">.</span><span class="token string">'不是空文件夹，如需删除，请手动删除！'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="22、清除文件状态缓存-clearstatcache"><a href="#22、清除文件状态缓存-clearstatcache" class="headerlink" title="22、清除文件状态缓存 - clearstatcache()"></a>22、清除文件状态缓存 - clearstatcache()</h2><blockquote><p>clearstatcache() 函数清除文件状态缓存。</p></blockquote><p>PHP 会缓存某些函数的返回信息，以便提供更高的性能。但是有时候，比如在一个脚本中多次检查同一个文件，而该文件在此脚本执行期间有被删除或修改的危险时，你需要清除文件状态缓存，以便获得正确的结果。要做到这一点，请使用 <code>clearstatcache()</code> 函数。</p><p><strong>语法</strong></p><blockquote><p><code>clearstatcache()</code></p></blockquote><p><strong>会进行缓存的函数，即受 clearstatcache() 函数影响的函数:</strong></p><ul><li><code>stat()</code></li><li><code>lstat()</code></li><li><code>file_exists()</code></li><li><code>is_writable()</code></li><li><code>is_readable()</code></li><li><code>is_executable()</code></li><li><code>is_file()</code></li><li><code>is_dir()</code></li><li><code>is_link()</code></li><li><code>filectime()</code></li><li><code>fileatime()</code></li><li><code>filemtime()</code></li><li><code>fileinode()</code></li><li><code>filegroup()</code></li><li><code>fileowner()</code></li><li><code>filesize()</code></li><li><code>filetype()</code></li><li><code>fileperms()</code></li></ul><h2 id="附：几个判断"><a href="#附：几个判断" class="headerlink" title="附：几个判断"></a>附：几个判断</h2><table><thead><tr><th>函数</th><th>语义</th></tr></thead><tbody><tr><td><code>is_dir(file)</code></td><td>目录 ？</td></tr><tr><td><code>is_executable(file)</code></td><td>可执行文件 ？</td></tr><tr><td><code>is_file(file)</code></td><td>常规文件 ？</td></tr><tr><td><code>is_link(file)</code></td><td>一个连接 ？</td></tr><tr><td><code>is_readable(file)</code></td><td>可读 ？</td></tr><tr><td><code>is_uploaded_file(file)</code></td><td>通过 <code>HTTP POST</code> 上传的 ？</td></tr><tr><td><code>is_writable(file)</code></td><td>可写 ？</td></tr><tr><td><code>is_writeable(file)</code></td><td><code>is_writable</code>的别名</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> filesystem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之MySQL数据库学习</title>
      <link href="/mysql/php-zhi-mysql-shu-ju-ku-xue-xi/"/>
      <url>/mysql/php-zhi-mysql-shu-ju-ku-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL数据库学习笔记-一"><a href="#MySQL数据库学习笔记-一" class="headerlink" title="MySQL数据库学习笔记(一)"></a>MySQL数据库学习笔记(一)</h1><h2 id="一、数据库的创建"><a href="#一、数据库的创建" class="headerlink" title="一、数据库的创建"></a>一、数据库的创建</h2><h3 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建数据库</span><span class="token variable">$createDb</span> <span class="token operator">=</span> <span class="token string">"CREATE DATABASE database_name"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2、检测数据库创建结果"><a href="#2、检测数据库创建结果" class="headerlink" title="2、检测数据库创建结果"></a>2、检测数据库创建结果</h3><h4 id="2-1、面向对象方法"><a href="#2-1、面向对象方法" class="headerlink" title="2.1、面向对象方法"></a>2.1、面向对象方法</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$createDb</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据库创建成功！"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Error creating database: "</span> <span class="token punctuation">.</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2、面向过程方法"><a href="#2-2、面向过程方法" class="headerlink" title="2.2、面向过程方法"></a>2.2、面向过程方法</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span><span class="token variable">$createDb</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据库创建成功！"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Error creating database: "</span> <span class="token punctuation">.</span> <span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、创建数据表"><a href="#二、创建数据表" class="headerlink" title="二、创建数据表"></a>二、创建数据表</h2><h3 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a>1、创建表</h3><blockquote><p>语法：<code>CREATE TABLE table_name();</code></p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$createTable</span> <span class="token operator">=</span> "<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token function">members</span> <span class="token punctuation">(</span>id <span class="token function">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token constant">UNSIGNED</span> <span class="token constant">AUTO_INCREMENT</span> <span class="token constant">PRIMARY</span> <span class="token constant">KEY</span><span class="token punctuation">,</span>姓名 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>电话 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>内容 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>参数说明</strong></p><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>NOT NULL</td><td>每一行都必须含有值（不能为空），null 值是不允许的。</td></tr><tr><td>DEFAULT</td><td>规定没有给列赋值时的默认值。</td></tr><tr><td>UNIQUE</td><td>保证某列的每行必须有唯一的值。</td></tr><tr><td>CHECK</td><td>保证列中的值符合指定的条件。</td></tr><tr><td>FOREIGN KEY</td><td>保证一个表中的数据匹配另一个表中的值的参照完整性。</td></tr><tr><td>PRIMARY KEY</td><td>NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。</td></tr></tbody></table><h3 id="2、检测表的创建"><a href="#2、检测表的创建" class="headerlink" title="2、检测表的创建"></a>2、检测表的创建</h3><h4 id="2-1、面向对象方法-1"><a href="#2-1、面向对象方法-1" class="headerlink" title="2.1、面向对象方法"></a>2.1、面向对象方法</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$createTable</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据表创建成功&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'数据表创建错误：'</span> <span class="token punctuation">.</span><span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> error<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2、面向过程方法-1"><a href="#2-2、面向过程方法-1" class="headerlink" title="2.2、面向过程方法"></a>2.2、面向过程方法</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span><span class="token variable">$createTable</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据表创建成功&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'数据表创建错误：'</span> <span class="token punctuation">.</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、向表中插入数据"><a href="#3、向表中插入数据" class="headerlink" title="3、向表中插入数据"></a>3、向表中插入数据</h3><p>在创建完数据表后，我们可以向表中插入数据，但须遵循一些语法规则：</p><ul><li>PHP 中 SQL 查询语句必须使用引号</li><li>在 SQL 查询语句中的字符串值必须加引号</li><li>数值的值不需要引号</li><li>NULL 值不需要引号</li></ul><h4 id="3-1、语法用法"><a href="#3-1、语法用法" class="headerlink" title="3.1、语法用法"></a>3.1、语法用法</h4><blockquote><p><strong>语法：</strong><br><code>INSERT INTO table_name (column1, column2, column3,...)VALUES (value1, value2, value3,...)</code></p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">//参照上方规则：字符串必须加引号</span><span class="token variable">$insertData</span> <span class="token operator">=</span> "<span class="token constant">INSERT</span> <span class="token constant">INTO</span> <span class="token function">members</span> <span class="token punctuation">(</span>姓名<span class="token punctuation">,</span>电话<span class="token punctuation">,</span>内容<span class="token punctuation">)</span><span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token string">'".$name."'</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">,</span><span class="token string">'".$comment."'</span><span class="token punctuation">)</span>"<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2、检测插入数据结果"><a href="#3-2、检测插入数据结果" class="headerlink" title="3.2、检测插入数据结果"></a>3.2、检测插入数据结果</h4><h5 id="3-2-1、面向对象方法"><a href="#3-2-1、面向对象方法" class="headerlink" title="3.2.1、面向对象方法"></a>3.2.1、面向对象方法</h5><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$insertData</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">TRUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"新记录插入成功"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Error: "</span> <span class="token punctuation">.</span> <span class="token variable">$insertData</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span> <span class="token punctuation">.</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-2-2、面向过程方法"><a href="#3-2-2、面向过程方法" class="headerlink" title="3.2.2、面向过程方法"></a>3.2.2、面向过程方法</h5><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token variable">$insertData</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"新记录插入成功"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Error: "</span> <span class="token punctuation">.</span> <span class="token variable">$insertData</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span> <span class="token punctuation">.</span>  <span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、数据库连接"><a href="#三、数据库连接" class="headerlink" title="三、数据库连接"></a>三、数据库连接</h2><h3 id="1、面向对象方法"><a href="#1、面向对象方法" class="headerlink" title="1、面向对象方法"></a>1、面向对象方法</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//数据库连接</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">,</span><span class="token variable">$database_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//连接检测</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> connect_error<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Connection failed:"</span><span class="token punctuation">.</span><span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> connect_error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据库连接成功。&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、面向过程方法"><a href="#2、面向过程方法" class="headerlink" title="2、面向过程方法"></a>2、面向过程方法</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//数据库连接</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">,</span><span class="token variable">$database_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检测连接</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Connection failed: "</span> <span class="token punctuation">.</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"数据库连接成功。"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、从数据库读取数据"><a href="#四、从数据库读取数据" class="headerlink" title="四、从数据库读取数据"></a>四、从数据库读取数据</h2><blockquote><p>语法：</p><ul><li><code>SELECT column_name(s) FROM table_name</code></li><li><code>SELECT * FROM table_name</code> 读取所有字段</li></ul></blockquote><h3 id="1、面向对象方法-1"><a href="#1、面向对象方法-1" class="headerlink" title="1、面向对象方法"></a>1、面向对象方法</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//读取数据</span><span class="token variable">$fecth</span> <span class="token operator">=</span> <span class="token string">"SELECT * FROM members"</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$fecth</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检测读取结果并输出</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token operator">-</span><span class="token operator">></span> num_rows <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">HTML</span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tbodyrow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"姓名"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"电话"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"内容"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span><span class="token constant">HTML</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token string">"0结果"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、面向过程方法-1"><a href="#2、面向过程方法-1" class="headerlink" title="2、面向过程方法"></a>2、面向过程方法</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//读取数据</span><span class="token variable">$fecth</span> <span class="token operator">=</span> <span class="token string">"SELECT * FROM members"</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span><span class="token variable">$fecth</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检测读取结果并输出</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mysqli_num_rows</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">HTML</span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tbodyrow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"姓名"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"电话"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment tbody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">"内容"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span><span class="token constant">HTML</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token string">"0结果"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><h4 id="1、WHERE"><a href="#1、WHERE" class="headerlink" title="1、WHERE"></a>1、WHERE</h4><blockquote><p>WHERE 子句用于提取满足指定标准的的记录。</p></blockquote><p><strong>语法：</strong></p><pre><code>SELECT column_name(s) FROM table_nameWHERE column_name operator value</code></pre><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$where</span> <span class="token operator">=</span> <span class="token string">"SELECT * FROM members WHERE 姓名='张三' "</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2、ORDER-BY"><a href="#2、ORDER-BY" class="headerlink" title="2、ORDER BY"></a>2、ORDER BY</h4><blockquote><p>ORDER BY 关键词用于对记录集中的数据进行排序。<br>默认升序排序，可以使用 DESC 进行降序排序。</p></blockquote><p><strong>语法：</strong></p><pre><code>SELECT column_name(s)FROM table_nameORDER BY column_name(s) ASC|DESC</code></pre><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$order</span> <span class="token operator">=</span> "<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> members <span class="token constant">ORDER</span> <span class="token constant">BY</span> id <span class="token constant">DESC</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>根据两列进行排序</strong></p><p>可以根据多个列进行排序。当按照多个列进行排序时，只有第一列的值相同时才使用第二列：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token constant">SELECT</span> <span class="token function">column_name</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token constant">FROM</span> table_name<span class="token constant">ORDER</span> <span class="token constant">BY</span> column1<span class="token punctuation">,</span> column2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>特殊：拼音排序</strong></p><p>拼音排序需要根据字符集采用的编码决定使用方法</p><table><thead><tr><th>字符集</th><th>使用方法</th></tr></thead><tbody><tr><td>gbk (中文编码)</td><td>直接在查询语句后边添加 <code>ORDER BY</code></td></tr><tr><td>utf8 (万国码)</td><td>先对字段进行转码然后排序。<br>方法：<code>CONVERT(row_title using gbk)</code></td></tr></tbody></table><p>实例：现有表格如下。对表格按姓名拼音排序</p><table><thead><tr><th>id</th><th>姓名</th><th>性别</th></tr></thead><tbody><tr><td>1</td><td>丁一</td><td>女</td></tr><tr><td>2</td><td>牛二</td><td>男</td></tr><tr><td>3</td><td>张三</td><td>男</td></tr></tbody></table><p>执行操作(由于原本是拼音升序，所以这里我们用降序来区别)</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$orderPy</span> <span class="token operator">=</span> "<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> members<span class="token constant">ORDER</span> <span class="token constant">BY</span> <span class="token function">CONVERT</span><span class="token punctuation">(</span>姓名 using gbk<span class="token punctuation">)</span> <span class="token constant">DESC</span>"<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果：</p><table><thead><tr><th>id</th><th>姓名</th><th>性别</th></tr></thead><tbody><tr><td>3</td><td>张三</td><td>男</td></tr><tr><td>2</td><td>牛二</td><td>男</td></tr><tr><td>1</td><td>丁一</td><td>女</td></tr></tbody></table><h4 id="3、UPDATE"><a href="#3、UPDATE" class="headerlink" title="3、UPDATE"></a>3、UPDATE</h4><blockquote><p>UPDATE 语句用于更新数据库表中已存在的记录。</p></blockquote><p><strong>语法：</strong></p><pre><code>UPDATE table_nameSET column1=value, column2=value2,...WHERE some_column=some_value</code></pre><blockquote><p>注意：UPDATE 语法中的 WHERE 子句。WHERE 子句规定了哪些记录需要更新。如果您想省去 WHERE 子句，所有的记录都会被更新！</p></blockquote><p><strong>实例</strong></p><p>现有如下表格：（已设置降序排列）</p><table><thead><tr><th>id</th><th>姓名</th><th>电话</th><th>内容</th></tr></thead><tbody><tr><td>3</td><td>张三</td><td>333</td><td>我叫张三</td></tr><tr><td>2</td><td>牛二</td><td>222</td><td>我叫牛二</td></tr><tr><td>1</td><td>丁一</td><td>111</td><td>我叫丁一</td></tr></tbody></table><p>修改更新表中 张三 为 李四</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$updateData</span> <span class="token operator">=</span> "<span class="token constant">UPDATE</span> members <span class="token constant">SET</span> 姓名<span class="token operator">=</span><span class="token string">'李四'</span><span class="token constant">WHERE</span> 姓名 <span class="token operator">=</span> <span class="token string">'张三'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果</p><table><thead><tr><th>id</th><th>姓名</th><th>电话</th><th>内容</th></tr></thead><tbody><tr><td>3</td><td>李四</td><td>333</td><td>我叫张三</td></tr><tr><td>2</td><td>牛二</td><td>222</td><td>我叫牛二</td></tr><tr><td>1</td><td>丁一</td><td>111</td><td>我叫丁一</td></tr></tbody></table><p><strong>UPDATE方法可以同时修改一条数据的多个字段</strong></p><p>修改更新表中</p><ul><li>张三 ——&gt; 李四</li><li>333 ——&gt; 444</li><li>我叫张三 ——&gt; 我叫李四</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$updateData</span> <span class="token operator">=</span> "<span class="token constant">UPDATE</span> members <span class="token constant">SET</span> 姓名<span class="token operator">=</span><span class="token string">'李四'</span><span class="token punctuation">,</span>电话 <span class="token operator">=</span> <span class="token string">'444'</span><span class="token punctuation">,</span> 内容 <span class="token operator">=</span> <span class="token string">'我叫李四'</span><span class="token constant">WHERE</span> 姓名 <span class="token operator">=</span> <span class="token string">'张三'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输出结果：</p><table><thead><tr><th>id</th><th>姓名</th><th>电话</th><th>内容</th></tr></thead><tbody><tr><td>3</td><td>李四</td><td>444</td><td>我叫李四</td></tr><tr><td>2</td><td>牛二</td><td>222</td><td>我叫牛二</td></tr><tr><td>1</td><td>丁一</td><td>111</td><td>我叫丁一</td></tr></tbody></table><blockquote><p>id设置为 <code>PRIMARY KEY</code>,不要轻易去改变它,若需要改变，不可与已存在的重复，否则无法更新数据。</p></blockquote><h4 id="4、DELETE"><a href="#4、DELETE" class="headerlink" title="4、DELETE"></a>4、DELETE</h4><blockquote><p>DELETE 语句用于从数据库表中<strong>删除行</strong>。</p></blockquote><p><strong>语法：</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token constant">DELETE</span> <span class="token constant">FROM</span> table_name<span class="token constant">WHERE</span> some_column <span class="token operator">=</span> some_value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意：DELETE中的WHERE子句。WHERE 子句规定了哪些记录需要删除。如果您想省去 WHERE 子句，所有的记录都会被删除！</p></blockquote><p><strong>实例</strong></p><p>现有表格同上，需要删除id为3的行：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$delete</span> <span class="token operator">=</span> " <span class="token constant">DELETE</span> <span class="token constant">FROM</span> members<span class="token constant">WHERE</span> 姓名 <span class="token operator">=</span> <span class="token string">'李四'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果：</p><table><thead><tr><th>id</th><th>姓名</th><th>电话</th><th>内容</th></tr></thead><tbody><tr><td>2</td><td>牛二</td><td>222</td><td>我叫牛二</td></tr><tr><td>1</td><td>丁一</td><td>111</td><td>我叫丁一</td></tr></tbody></table><p><code>drop</code> <code>truncate</code>和 <code>delete</code>都可以对数据表进行删除操作，具体区别如下表：</p><table><thead><tr><th>语句</th><th>含义</th></tr></thead><tbody><tr><td>drop</td><td><strong>删除表</strong>。删除表及其结构。<strong>不可回滚</strong></td></tr><tr><td>truncate</td><td><strong>清空表</strong>。删除表中所有数据，保留表结构。<strong>不可回滚</strong></td></tr><tr><td>delete</td><td><strong>删除行</strong>。删除操作作为事务记录在日志中。<strong>可以回滚</strong></td></tr></tbody></table><blockquote><p><code>TRUNCATE</code>与不带 <code>WHERE</code> 的 <code>DELETE</code> 都是删除表数据，保留表结构。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>$_FILES(二)文件的上传</title>
      <link href="/php-xue-xi/wen-jian-cao-zuo-er-wen-jian-de-shang-chuan/"/>
      <url>/php-xue-xi/wen-jian-cao-zuo-er-wen-jian-de-shang-chuan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在上一节中学习了<code>$_FILES</code>的基本使用，本节将继续学习它的进阶用法：文件的上传与 校验</p></blockquote><h2 id="1、创建上传表单"><a href="#1、创建上传表单" class="headerlink" title="1、创建上传表单"></a>1、创建上传表单</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file.php<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>说明：</p><ul><li><code>form</code>标签的 <code>enctype</code>属性规定了在提交表单时要使用哪种内容类型。在表单需要二进制数据时，比如文件内容，请使用 <code>multipart/form-data</code>。</li><li><code>input</code> 标签的 <code>type="file"</code>属性规定了应该把输入作为文件来处理。举例来说，当在浏览器中预览时，会看到输入框旁边有一个浏览按钮。</li></ul></blockquote><h2 id="2、创建上传脚本"><a href="#2、创建上传脚本" class="headerlink" title="2、创建上传脚本"></a>2、创建上传脚本</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"错误："</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"上传文件名: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"文件类型: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"文件大小: "</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">" kB&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"文件临时存储的位置: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>说明：以上语法第一个参数是表单中input的<code>name</code>，第二个参数为文件上传属性，具体参数见下表</p></blockquote><p><strong>第二参数详解</strong></p><table><thead><tr><th>参数</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>上传文件的名称</td></tr><tr><td>type</td><td>上传文件的类型</td></tr><tr><td>size</td><td>上传文件的大小，以字节（B）计算</td></tr><tr><td>tmp_name</td><td>文件被上传后在服务端储存的临时文件名，一般是系统默认</td></tr><tr><td>error</td><td>该文件上传相关的错误代码。<br>PHP 4.2.0 版本中增加，PHP4.3之后变成常量</td></tr></tbody></table><p><strong>error错误类型和值</strong></p><table><thead><tr><th>错误类型</th><th>值 - 说明</th></tr></thead><tbody><tr><td>UPLOAD_ERR_OK</td><td><strong>0</strong> 。没有错误发生，文件上传成功</td></tr><tr><td>UPLOAD_ERR_INI_SIZE</td><td><strong>1</strong> 。上传的文件超过了 php.ini 中 upload_max_filesize选项限制的值</td></tr><tr><td>UPLOAD_ERR_FORM_SIZE</td><td><strong>2</strong> 。上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值</td></tr><tr><td>UPLOAD_ERR_PARTIAL</td><td><strong>3</strong> 。文件只有部分被上传</td></tr><tr><td>UPLOAD_ERR_NO_FILE</td><td><strong>4</strong> 。文件没有被上传</td></tr><tr><td>UPLOAD_ERR_NO_TMP_DIR</td><td><strong>6</strong> 。找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进</td></tr><tr><td>UPLOAD_ERR_CANT_WRITE</td><td><strong>7</strong> 。文件写入失败。PHP 5.1.0 引进</td></tr></tbody></table><h2 id="3、对上传文件进行限制"><a href="#3、对上传文件进行限制" class="headerlink" title="3、对上传文件进行限制"></a>3、对上传文件进行限制</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">//设置允许用户上传的文件类型</span><span class="token variable">$allowExts</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'jpg'</span><span class="token punctuation">,</span><span class="token string">'jpeg'</span><span class="token punctuation">,</span><span class="token string">'gif'</span><span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用explode()语法将文件名分成两段</span><span class="token variable">$fenge</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取出文件名后缀</span><span class="token variable">$exts</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$fenge</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果文件后缀名在允许数组内，就允许上传</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$exts</span><span class="token punctuation">,</span><span class="token variable">$allowExts</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//若上传成功，打印文件信息，若上传失败，则抛出错误信息</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br> '</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'文件名:'</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">'文件类型：'</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">"文件临时存储的名字: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">'文件大小：'</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'kbyte&lt;br>'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果文件后缀名不符合规定，则给出提示</span>    <span class="token keyword">echo</span>  <span class="token string">"错误的文件格式"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、对上传的文件进行保存"><a href="#4、对上传的文件进行保存" class="headerlink" title="4、对上传的文件进行保存"></a>4、对上传的文件进行保存</h2><blockquote><p><strong>注意：</strong>文件被上传结束后，默认地被存储在了临时目录中，这时您必须将它从临时目录中删除或移动到其它地方，如果没有，不管是否上传成功，脚本执行完后临时目录里的文件肯定会被删除。所以在删除之前要用PHP的 <code>copy()</code> 或者 <code>move_uploaded_file()</code>将它复制或移动到其它位置，此时，才算完成了上传文件过程。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">//设置允许用户上传的文件类型</span><span class="token variable">$allowExts</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'jpg'</span><span class="token punctuation">,</span><span class="token string">'jpeg'</span><span class="token punctuation">,</span><span class="token string">'gif'</span><span class="token punctuation">,</span><span class="token string">'png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用explode()语法将文件名分成两段</span><span class="token variable">$fenge</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取出文件名后缀</span><span class="token variable">$exts</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$fenge</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果文件后缀名在允许数组内，就允许上传</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$exts</span><span class="token punctuation">,</span><span class="token variable">$allowExts</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//若上传成功，打印文件信息，若上传失败，则抛出错误信息</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br> '</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//上传成功，执行</span>    <span class="token keyword">echo</span> <span class="token string">'文件名:'</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">'文件类型：'</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">"文件临时存储的名字: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'&lt;br>'</span> <span class="token punctuation">.</span>         <span class="token string">'文件大小：'</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'kbyte&lt;br>'</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//检查文件是否存在</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">"cunchu/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">'文件已存在&lt;br>'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//若不存在，则将临时文件移动到存储位置</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'cunchu/'</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果文件后缀名不符合规定，则给出提示</span>    <span class="token keyword">echo</span>  <span class="token string">"错误的文件格式"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>用法：<code>move_uploaded_file(file,newloc)</code><br>若移动成功，返回true，否则返回false<br> <strong>参数说明：</strong></p><ul><li><code>file</code> 需要移动的文件</li><li><code>newloc</code> 文件的新位置</li></ul></blockquote><p><strong>到此，文件才算上传完成。允许用户上传文件是一个巨大的安全风险。请仅仅允许可信的用户执行文件上传操作并对上传文件进行严格校验。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> $_FILES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>$_FILES(一)文件的基本操作</title>
      <link href="/php-xue-xi/wen-jian-cao-zuo-yi-wen-jian-de-ji-ben-cao-zuo/"/>
      <url>/php-xue-xi/wen-jian-cao-zuo-yi-wen-jian-de-ji-ben-cao-zuo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>文档回顾：PHP 中预定义了几个超级全局变量（superglobals） ，PHP 4.1.0 之后被启用，这意味着它们在一个脚本的全部作用域中都可用。你不需要特别说明，就可以在函数及类中使用。</p></blockquote><h2 id="1、fopen-函数：在-PHP-中-打开文件"><a href="#1、fopen-函数：在-PHP-中-打开文件" class="headerlink" title="1、fopen()函数：在 PHP 中 打开文件"></a>1、fopen()函数：在 PHP 中 打开文件</h2><blockquote><p>使用方法：<code>fopen(参数1,参数2)</code></p></blockquote><p><strong>参数说明：</strong></p><table><thead><tr><th>参数 1</th><th>参数 2</th></tr></thead><tbody><tr><td>要打开的文件的名称 &nbsp;&nbsp;例如：readme.txt</td><td>规定打开文件使用模式</td></tr></tbody></table><p><strong>打开文件可使用的模式表</strong></p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>r</td><td><strong>只读。</strong> 在文件开头开始</td></tr><tr><td>r+</td><td><strong>读/写。</strong>在文件的开头开始</td></tr><tr><td>w</td><td><strong>只写。</strong>打开并清空文件的内容；如果文件不存在，则创建新文件</td></tr><tr><td>w+</td><td><strong>读/写。</strong>打开并清空文件的内容；如果文件不存在，则创建新文件</td></tr><tr><td>a</td><td><strong>追加。</strong>打开并向文件末尾进行写操作，如果文件不存在，则创建新文件</td></tr><tr><td>a+</td><td><strong>读/追加。</strong>通过向文件末尾写内容，来保持文件内容</td></tr><tr><td>x</td><td><strong>只写。</strong>创建新文件。如果文件已存在，则返回 FALSE 和一个错误</td></tr><tr><td>x+</td><td><strong>读/写。</strong>创建新文件。如果文件已存在，则返回 FALSE 和一个错误</td></tr></tbody></table><blockquote><p>特别说明：如果 fopen() 函数无法打开指定文件，则返回 0 (false)。<br>因此可以使用<code>exit()</code>和<code>fopen()</code>一起使用，用于返回错误信息。</p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>   <span class="token variable">$file</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"readme.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"打开文件失败!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、fclose-函数：关闭文件"><a href="#2、fclose-函数：关闭文件" class="headerlink" title="2、fclose()函数：关闭文件"></a>2、fclose()函数：关闭文件</h2><blockquote><p>使用方法：<code>fclose($file)</code></p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>   <span class="token variable">$file</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"readme.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"打开文件失败!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 执行代码</span>   <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、feof-函数：检查文件末尾（EOF）"><a href="#3、feof-函数：检查文件末尾（EOF）" class="headerlink" title="3、feof()函数：检查文件末尾（EOF）"></a>3、feof()函数：检查文件末尾（EOF）</h2><blockquote><p>使用方法：<code>feof($file)</code> &gt;<strong>特别注意：在 w 、a 和 x 模式下，您无法读取打开的文件！</strong></p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">echo</span> <span class="token string">"这里是文件结尾"</span> <span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、读取文件"><a href="#4、读取文件" class="headerlink" title="4、读取文件"></a>4、读取文件</h2><p><strong>在 PHP 中，读取文件以下方式</strong></p><table><thead><tr><th align="center">方式</th><th align="center">fgets()</th><th align="center">fgetc()</th></tr></thead><tbody><tr><td align="center">描述</td><td align="center">逐行读取文件</td><td align="center">逐字符读取文件</td></tr></tbody></table><blockquote><p>说明：在调用以上任何函数之后，文件指针会移动到下一行。</p></blockquote><p><strong>实例</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"readme.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"打开文件失败!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// echo fgetc($file);</span><span class="token punctuation">}</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> $_FILES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>您好，世界</title>
      <link href="/sui-bi/nin-hao-shi-jie/"/>
      <url>/sui-bi/nin-hao-shi-jie/</url>
      
        <content type="html"><![CDATA[<p>关于建立个人博客的想法已有一段时间了，总是觉得没时间、很忙、下次吧…真正操作起来，其实并没有那么复杂，就是一次又一次的去拖延，这是一个并不好的习惯，但我们都或多或少的有着这样的坏毛病。</p><p>关于博客的框架选择，之前用过<code>wordpress</code>、<code>dedeCMS</code>、<code>ECMS</code>、<code>phpMyWind</code>等，最终还是选择了hexo。主要还是觉得简单易用，作为IT男而言，用<code>markdown</code>来记录自己的成长，那真的是太酷了！</p><p>本博客主要用来记录个人的学习笔记以及遇到的困难和解决方案，方便自己复习，就当是鞭策自己进步的一种方案。如果某一点让大家有了共鸣或是有帮助，那真的是天大的良善！</p><p>有共同学习的朋友，可以加QQ或是微信共同进步，互相打气，互相监督，让技术，为我们引路，开拓视野，拥抱崭新的未来！</p><p>最后：</p><pre><code>hello world! i'm coming~</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
